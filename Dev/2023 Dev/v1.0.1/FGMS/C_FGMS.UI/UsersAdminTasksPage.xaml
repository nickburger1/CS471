<Page x:Class="C_FGMS.UI.UsersAdminTasksPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:C_FGMS.UI"
      mc:Ignorable="d" 
      xmlns:hc="https://handyorg.github.io/handycontrol"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="UsersAdminTasksPage">

    <!--
        Author: Jon Maddocks
        Summary: Page represents the Admin interface that is responsible for
            detailing the admin only tasks that allow the admin to add/delete items
            to their demographics category of their choosing, add/delete expense type
            items, and modify rates.
        Date Created: March 23, 2023
    -->

    <Grid Name="grdContainerAdmin" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="5"/>
        </Grid.RowDefinitions>

        <!-- Grid Resources -->
        <Grid.Resources>
            <Style TargetType="hc:Card" BasedOn="{StaticResource CardBaseStyle}">
                <Style.Setters>
                    <Setter Property="Effect" Value="{DynamicResource EffectShadow2}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="#FFF6F6F6"/>
                    <Setter Property="Margin" Value="4,10,4,0"/>
                </Style.Setters>
            </Style>

            <Style TargetType="TextBlock">
                <Style.Setters>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="TextWrapping" Value="Wrap"/>
                    <Setter Property="Margin" Value="5,0,0,2"/>
                </Style.Setters>
            </Style>
            <Style TargetType="hc:Divider" BasedOn="{StaticResource DividerBaseStyle}">
                <Style.Setters>
                    <Setter Property="Grid.ColumnSpan" Value="2"/>
                    <Setter Property="VerticalAlignment" Value="Bottom"/>
                    <Setter Property="Margin" Value="2,0,2,0"/>
                </Style.Setters>
                <Style.Triggers>
                    <Trigger Property="Grid.Row" Value="0">
                        <Setter Property="LineStroke" Value="Black"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </Grid.Resources>


        <hc:Card Grid.Row="1" Grid.Column="0" Height="auto" VerticalAlignment="Stretch">
            <Border CornerRadius="4,4,0,0">
                <Grid Grid.Row="2" Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto" MinHeight="158"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>





                    <TextBlock Text="Add/Delete Type Categories" Grid.Row="0" Grid.ColumnSpan="2" TextAlignment="Center" FontWeight="Bold" Margin="0,4,4,4"/>

                    <!--Row 1: Choose Category -->
                    <hc:SimpleStackPanel Grid.Row="1" Grid.Column="0" Orientation="Vertical" Grid.ColumnSpan="2" Margin="0,0,0, 0">
                        <TextBlock Text="Choose Category" HorizontalAlignment="Left" Margin="10"/>
                        <Grid Name="grdCategory" HorizontalAlignment="Left" Margin="10,0,0,-5" Width="251" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.Resources>
                                <Style TargetType="RadioButton" BasedOn="{StaticResource RadioButtonBaseStyle}">
                                    <Style.Setters>
                                        <Setter Property="Margin" Value="5,5,20,5"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                    </Style.Setters>
                                </Style>
                            </Grid.Resources>

                            <RadioButton x:Name="rdoGender" Grid.Row="0" Grid.Column="0" IsChecked="True"
                         GroupName="grpCategory" Checked="rdoGender_Checked">Gender</RadioButton>
                            <RadioButton x:Name="rdoIdentifiesAs" Grid.Row="0" Grid.Column="1"
                         GroupName="grpCategory" Checked="rdoIdentifiesAs_Checked" IsChecked="False">Identifies As</RadioButton>
                            <RadioButton x:Name="rdoEthnicity" Grid.Row="1" Grid.Column="0"
                         GroupName="grpCategory" Checked="rdoEthnicity_Checked"
                         Margin="5,5,20,5"  HorizontalAlignment="Left" IsChecked="False">Ethnicity</RadioButton>
                            <RadioButton x:Name="rdoRacialGroup" Grid.Row="1" Grid.Column="1"
                         GroupName="grpCategory" Checked="rdoRacialGroup_Checked" IsChecked="False">Racial Group</RadioButton>
                            <RadioButton x:Name="rdoExpense" Grid.Row="2" Grid.Column="0" IsChecked="False"
                         GroupName="grpCategory" Checked="rdoExpense_Checked">Expense</RadioButton>
                            <RadioButton x:Name="rdoReason" Grid.Row="2" Grid.Column="1" IsChecked="False"
                         GroupName="grpCategory" Checked="rdoReason_Checked">Depart Reason</RadioButton>
                            <RadioButton x:Name="rdoTempInfo" Grid.Row="3" Grid.Column="1" IsChecked="False"
                         GroupName="grpCategory" Checked="rdoTempInfo_Checked">Temp Info</RadioButton>
                            <RadioButton x:Name="rdbDonation" Grid.Row="3" Grid.Column="0" IsChecked="False"
                         GroupName="grpCategory" Checked="rdbDonation_Checked">Donation</RadioButton>
                        </Grid>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" Height="17">Add New:</TextBlock>
                            <TextBox Margin="5"
                                x:Name="txtAddNew"
                                hc:TitleElement.Title="Add New: "
                                Text="{Binding CurrentStipendRate, Mode=TwoWay}" Width="147" />
                            <Button Click="addRow" Content="Add" />
                        </StackPanel>

                        <Grid Grid.ColumnSpan="2" Margin="10,0,0,-5">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.Resources>
                                <Style TargetType="RadioButton">
                                    <Style.Setters>
                                        <Setter Property="Margin" Value="5,5,20,5"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                    </Style.Setters>
                                </Style>
                            </Grid.Resources>

                            <RadioButton x:Name ="rdoDate" Content="Date" GroupName="grpTempType" Grid.Column="0">
                                <RadioButton.Style>
                                    <Style TargetType="RadioButton">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=rdoTempInfo}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </RadioButton.Style>
                            </RadioButton>
                            <RadioButton x:Name ="rdoCheckBox" Content="CheckBox" GroupName="grpTempType" Grid.Column="1">
                                <RadioButton.Style>
                                    <Style TargetType="RadioButton">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=rdoTempInfo}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </RadioButton.Style>
                            </RadioButton>
                        </Grid>
                    </hc:SimpleStackPanel>

                    <DataGrid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                        CanUserAddRows="False" AutoGenerateColumns="False" Name="dtgDemographics" ColumnHeaderHeight="25" RowHeight="40" Background="White"  
                                          GridLinesVisibility="None" CanUserResizeColumns="False" AlternatingRowBackground="LightGray" AlternationCount="2" IsReadOnly="True" Margin="0,27,0,1">
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background" Value="Salmon"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
                                <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
                                <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
                                <Setter Property="TextBlock.TextAlignment" Value="Center"></Setter>
                                <Setter Property="TextBlock.VerticalAlignment" Value="Center"></Setter>
                                <Setter Property="Background" Value="Transparent"></Setter>
                                <Setter Property="BorderThickness" Value="0"></Setter>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="*" Binding ="{Binding Name}" x:Name="colName" Header="Gender"/>
                            <DataGridTemplateColumn Header="Action" Width=".5*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate >
                                        <Button Click="delRow">
                                            <Image Source="/Resources/delete-icon.png"></Image>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Border>
        </hc:Card>

        <!-- Card 2-->
        <hc:Card Grid.Row="1" Grid.Column="1" Height="auto" VerticalAlignment="Stretch">
            <Border CornerRadius="4,4,0,0">
                <Grid Grid.Row="2" Grid.Column="0" RenderTransformOrigin="0.499,1.014">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.Resources>

                    </Grid.Resources>


                    <TextBlock Text="Deleted Volunteers" TextAlignment="Center" FontWeight="Bold" Margin="0,2,4,0" Height="16"/>

                    <!--Row 1: Choose Category -->
                    <DataGrid Grid.Row="1" Grid.Column="0"
                        CanUserAddRows="False" AutoGenerateColumns="False" Name="dtgDeleted" ColumnHeaderHeight="25" RowHeight="40" Background="White"  
                                          GridLinesVisibility="None" CanUserResizeColumns="False" AlternatingRowBackground="LightGray" AlternationCount="2" IsReadOnly="True" Margin="0,0,0,0">
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background" Value="Salmon"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
                                <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
                                <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
                                <Setter Property="TextBlock.TextAlignment" Value="Center"></Setter>
                                <Setter Property="TextBlock.VerticalAlignment" Value="Center"></Setter>
                                <Setter Property="Background" Value="Transparent"></Setter>
                                <Setter Property="BorderThickness" Value="0"></Setter>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="*" Binding = "{Binding FullName}" Header="Name"/>
                            <DataGridTextColumn Width="*" Binding = "{Binding Birthday}" Header="DOB"/>
                            <DataGridTemplateColumn Header="Action" Width=".5*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate >
                                        <Button Click="restoreVolunteer">
                                            <Image Source="/Resources/add-icon.png"></Image>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <TextBlock Grid.Row="2" Text="Student Needs" TextAlignment="Center" FontWeight="Bold" Margin="0,2,4,0" Height="16"/>

                    <!-- Choose student need -->
                    <DataGrid Grid.Row="3" Grid.Column="0"
                        CanUserAddRows="False" ItemsSource="{Binding StudentNeeds}" SelectedItem="{Binding SelectedNeed}" DataContext="{Binding}" AutoGenerateColumns="False" Name="dtgNeeds" ColumnHeaderHeight="25" RowHeight="40" Background="White"  
                                          GridLinesVisibility="None" CanUserResizeColumns="False" AlternatingRowBackground="LightGray" AlternationCount="2" IsReadOnly="True" Margin="0,0,0,0">
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background" Value="Salmon"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
                                <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
                                <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
                                <Setter Property="TextBlock.TextAlignment" Value="Center"></Setter>
                                <Setter Property="TextBlock.VerticalAlignment" Value="Center"></Setter>
                                <Setter Property="Background" Value="Transparent"></Setter>
                                <Setter Property="BorderThickness" Value="0"></Setter>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="*" Binding = "{Binding Acronym}" Header="Acronym"/>
                            <DataGridTextColumn Width="*" Binding = "{Binding Description}" Header="Description"/>
                            <DataGridTemplateColumn Header="Actions" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                            <Button ToolTip="Delete"
                                             Command="{Binding DataContext.ConfirmDeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                                                <Image Source="/Resources/delete-icon.png"></Image>
                                            </Button>
                                            <Button ToolTip="Edit" Click="Edit_Need_Button_Click" Margin="1,0,0,0">
                                                <!--Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">-->
                                                <Image Source="/Resources/edit-icon.png" />
                                            </Button>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <TextBlock Grid.Row="4" Text="Student Conditions" TextAlignment="Center" FontWeight="Bold" Margin="0,2,4,0" Height="16"/>
                    
                    <!-- Choose student condition -->
                    <DataGrid Grid.Row="5" Grid.Column="0"
                        CanUserAddRows="False" ItemsSource="{Binding StudentConditions}" SelectedItem="{Binding SelectedCondition}" DataContext="{Binding}" AutoGenerateColumns="False" Name="dtgCondtions" ColumnHeaderHeight="25" RowHeight="40" Background="White"  
                                          GridLinesVisibility="None" CanUserResizeColumns="False" AlternatingRowBackground="LightGray" AlternationCount="2" IsReadOnly="True" Margin="0,0,0,0">
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background" Value="Salmon"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
                                <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
                                <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
                                <Setter Property="TextBlock.TextAlignment" Value="Center"></Setter>
                                <Setter Property="TextBlock.VerticalAlignment" Value="Center"></Setter>
                                <Setter Property="Background" Value="Transparent"></Setter>
                                <Setter Property="BorderThickness" Value="0"></Setter>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="*" Binding = "{Binding Acronym}" Header="Acronym"/>
                            <DataGridTextColumn Width="*" Binding = "{Binding Description}" Header="Description"/>
                            <DataGridTemplateColumn Header="Actions"  Width="*">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                            <Button ToolTip="Delete"
                                             Command="{Binding DataContext.ConfirmDeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                                                <Image Source="/Resources/delete-icon.png"></Image>
                                            </Button>
                                            <Button ToolTip="Edit" Click="Edit_Condition_Button_Click" Margin="1,0,0,0">
                                                <!--Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">-->
                                                <Image Source="/Resources/edit-icon.png" />
                                            </Button>
                                        </StackPanel>
                                        
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Border>
        </hc:Card>

        <!-- Card 3: Modify Rates -->
        <hc:Card Grid.Row="1" Grid.Column="2">
            <Border CornerRadius="4,4,0,0">
                <Grid Grid.Row="2" Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="hc:TextBox" BasedOn="{StaticResource TextBoxExtend}">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="Padding" Value="4,4,0,0" />
                            <Setter Property="hc:TitleElement.TitlePlacement" Value="Left"/>
                            <Setter Property="hc:TitleElement.VerticalAlignment" Value="Stretch"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Margin" Value="0,4,4,4"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="Padding" Value="4,4,0,0" />
                            <Setter Property="Margin" Value="0,4,4,4"/>
                        </Style>
                    </Grid.Resources>



                    <!--Header and Dividers-->
                    <TextBlock Text="Modify Rates" Grid.Row="0" Grid.ColumnSpan="2" TextAlignment="Center" FontWeight="Bold"/>

                    <hc:Divider Grid.Row="1"/>
                    <hc:Divider Grid.Row="4"/>
                    <hc:Divider Grid.Row="8"/>
                    <hc:Divider Grid.Row="11"/>


                    <!--Row 2: Current Stipend Rates-->
                    <hc:TextBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="1"
                                x:Name="txtCurrentStipendRate"
                                hc:TitleElement.Title="Stipend Rate: " Margin="52,5,58,0"/>


                    <!--Row 3: Current PTO Rate-->
                    <hc:TextBox Grid.Row="3" Grid.Column="0"
                                x:Name="txtCurrentPTORate"
                                hc:TitleElement.Title="PTO Rate: "
                                Margin="71,5,57,0"/>
                    <!--Row 4: Save Button e-->
                    <Button x:Name ="btnSavePTOStipend" Click="SavePTOStipends" Grid.Row="4" Margin="5, 5,10,5">Save</Button>
                    <!--Row 5: Yearly Meal Value-->
                    <hc:TextBox Grid.Row="5" Grid.Column="0"
                                x:Name="txtYearlyMealValue"
                                hc:TitleElement.Title="Meal Value: "
                                Margin="61,5,57,0"/>
                    <!--Row 6: Current Mileage Value-->
                    <hc:TextBox Grid.Row="6" Grid.Column="0"
                                x:Name="txtCurrentMileageValue"
                                hc:TitleElement.Title="Mileage Value: "
                                Margin="45,5,57,0"/>
                    <!--Row 7: Current Bus Value-->
                    <hc:TextBox Grid.Row="7" Grid.Column="0"
                                x:Name="txtCurrentBusValue"
                                hc:TitleElement.Title="Bus Milage Rate: "
                                Margin="34,5,57,0"/>
                    <Button x:Name="btnSaveTransportRates" Grid.Row="8" Margin="5, 5,10,5" Click="SaveTransportRates">Save</Button>
                    <!--Row 8: Grant Date-->
                    <StackPanel Grid.Row ="9" Orientation="Horizontal" Margin="0, 5,0,0" HorizontalAlignment="Center">
                        <TextBlock Width="114" Margin="0,0,-25,0">Effective Date:</TextBlock>
                        <DatePicker x:Name="dpGrantDate" Width="100"></DatePicker>
                    </StackPanel>
                    <!--Row 8: Grant Starting Amount-->
                    <hc:TextBox Grid.Row="10"
                                x:Name="txtGrantAmount"
                                hc:TitleElement.Title="Grant Stipend: "
                                Margin="5,5,5,0" VerticalAlignment="Top"/>
                    <Button x:Name="btnAddGrant" Click="setTotalGrantStipend" Grid.Row="11" Margin="5, 5,10,5">Set Total Grant Stipend</Button>
                    <Button x:Name="btnReset" Click="resetAssignments" Grid.Row="12" Margin="5, 5,10,5" Background="Red">RESET CHILD ASSIGNMENTS</Button>
                </Grid>
            </Border>
        </hc:Card>
    </Grid>
</Page>
