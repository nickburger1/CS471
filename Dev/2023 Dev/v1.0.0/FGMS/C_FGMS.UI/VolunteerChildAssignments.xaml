<Page x:Class="C_FGMS.UI.VolunteerChildAssignments"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:data="clr-namespace:B_FGMS.BusinessLogic.Models.Volunteer;assembly=B_FGMS.BusinessLogic"      
      xmlns:local="clr-namespace:C_FGMS.UI"
      mc:Ignorable="d"
      xmlns:hc="https://handyorg.github.io/handycontrol"
      d:DesignHeight="450" d:DesignWidth="900"
      Title="VolunteerChildAssignments">
    <!-- Volunteer Child Assignments Page
         Author: Isabelle Johns
         Last Modified: 2/8/23-->
    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="175*"/>
            <ColumnDefinition Width="309*"/>
            <ColumnDefinition Width="262*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Dropdown selector -->
        <hc:ComboBox Grid.Row="0" Grid.Column="0" AutoComplete="True" IsEditable="True"
                                 Width="auto" Height="auto" Margin="10,10,10,10" ShowClearButton="True"
                                 ItemsSource="{Binding Names}"
                                 SelectedValuePath="Tuid"
                                 DisplayMemberPath="FullName"                                 
                                 x:Name="CmbSelectVolunteer"
                                 hc:InfoElement.Placeholder="Volunteer Name" SelectionChanged="cmbSelectVolunteer_SelectionChanged"
                                 Loaded="CmbSelectVolunteer_Loaded" />

        <hc:ComboBox Grid.Row="0" Grid.Column="1" AutoComplete="True" IsEditable="True"
                                 Width="auto" Height="auto" Margin="10,10,10,10" ShowClearButton="True"
                                 ItemsSource="{Binding Classrooms}"
                                 SelectedValuePath="ClassroomNumber"
                                 DisplayMemberPath="ClassroomNumber"                                 
                                 x:Name="CmbSelectRoom"
                                 hc:InfoElement.Placeholder="Room Number" SelectionChanged="CmbSelectRoom_SelectionChanged" />

        <!-- EDIT Mode -->
        <TextBlock x:Name="txtEditMode" Grid.Column="2" Text="Edit Mode"
                   VerticalAlignment="Center" HorizontalAlignment="Center"
                   FontSize="30" FontWeight="Bold" Foreground="Salmon"
                   Visibility="Hidden" Height="40" Width="144"/>

        
        <!-- PlaceHolders for the Edit and Delete Icons -->
        <Grid Grid.Column="3" HorizontalAlignment="Right">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Button x:Name="btnAdd" Click="btnAddChildAssignment_Click"
                Grid.Column="1"
                BorderThickness="0" Padding="0" Margin="5,0,5,0"
                ToolTip="Add New Child Assignment">
                <Image Source="/Resources/add-icon.png"></Image>
            </Button>
            <Button x:Name="btnEdit" Click="btnEdit_Click" ToolTip="Edit Child Assignment"
                Grid.Column="2" BorderThickness="0" Padding="0" Margin="5,0,5,0">
                <Image Source="/Resources/edit-icon.png"/>
            </Button>
            <Button x:Name="btnDelete" Click="btnDelete_Click" ToolTip="Delete Child Assignment"
                Grid.Column="3" BorderThickness="0" Padding="0" Margin="5,0,5,0" >
                <Image Source="/Resources/delete-icon.png"/>
            </Button>
            <Button x:Name="btnExport" Click="btnExportChildAssignment_Click"
                Grid.Column="4"
                BorderThickness="0" Padding="0" Margin="5,0,5,0"
                ToolTip="Export Child Assignment to Excel">
                <Image Source="\Resources\reports-icon.png" />
            </Button>
            <Button x:Name="btnRefresh"
                Grid.Column="5"
                BorderThickness="0" Padding="0" Margin="5,0,5,0"
                ToolTip="Refresh Data" Click="btnRefresh_Click">
                <Image Source="\Resources\refresh-icon.png" />
            </Button>
        </Grid>

        <!-- SideBar Info Card -->
        <hc:Card Grid.Row="1" Grid.Column="0" BorderThickness="0" Margin="4,4,4,4">
            <Border CornerRadius="4,4,0,0">
                <Grid VerticalAlignment="Center" x:Name="grdMain">
                    <Grid.Resources>
                        <Style TargetType="hc:TextBox" BasedOn="{StaticResource TextBoxExtend}">
                            <Setter Property="hc:TitleElement.TitlePlacement" Value="Top"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="IsReadOnly" Value="True"/>
                            <Setter Property="FontSize" Value="14"/>
                        </Style>
                        <Style TargetType="hc:ComboBox" BasedOn="{StaticResource ComboBoxExtend}">
                            <Setter Property="hc:TitleElement.TitlePlacement" Value="Top"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground"  Value="Black"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="IsReadOnly" Value="True"/>
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="FontSize" Value="14"/>
                        </Style>
                        <Style x:Key="CenteredToolTip" TargetType="{x:Type ToolTip}">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Style>
                        <data:VolunteerChildAssignmentsModel x:Key="VolunteerChildAssignments" />
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <Grid.DataContext>
                        <Binding Source="{StaticResource VolunteerChildAssignments}"/>
                    </Grid.DataContext>
                    
                    <hc:TextBox hc:InfoElement.Placeholder="Arthur Eddy" Grid.Row="0" x:Name="txtSchool"
                                hc:TitleElement.Title="School:" Text="{Binding Path=School.Name, Mode=TwoWay}"/>
                    <hc:TextBox hc:InfoElement.Placeholder="25" Grid.Row="1" x:Name="txtClassroomSize"
                                hc:TitleElement.Title="Classroom Size:" Text="{Binding Path=ClassroomSize, Mode=TwoWay}"/>
                    <hc:TextBox hc:InfoElement.Placeholder="4" Grid.Row="2" x:Name="txtKidsAssigned"
                                hc:TitleElement.Title="Kids Assigned:" Text="{Binding Path=KidsAssigned, Mode=TwoWay}"/>
                    <hc:TextBox hc:InfoElement.Placeholder="1st" Grid.Row="3" x:Name="txtGradeLevel"
                                hc:TitleElement.Title="Grade Level:" Text="{Binding Path=GradeLevel, Mode=TwoWay}"/>
                    <hc:TextBox hc:InfoElement.Placeholder="0" Grid.Row="4" x:Name="txtAge0to5"
                                hc:TitleElement.Title="Age 0 to 5:" Text="{Binding Path=Age0To5, Mode=TwoWay}"/>
                    <hc:TextBox hc:InfoElement.Placeholder="4" Grid.Row="5" x:Name="txtAge6to12"
                                hc:TitleElement.Title="Age 6 to 12:" Text="{Binding Path=Age6To12, Mode=TwoWay}"/>
                </Grid>
            </Border>
        </hc:Card>

        <!-- Table for Student Info -->
        <DataGrid IsReadOnly="True" Margin="10,10,10,10" AutoGenerateColumns="False" Name="dtgStudent" 
                              ItemsSource="{Binding childAssignmentsGrid}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"
                              HorizontalContentAlignment="Center" AlternationCount="2"
                              SelectionChanged="dtgStudent_SelectionChanged">
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="Salmon"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="Grid.ShowGridLines" Value="True"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource DataGridRowStyle}">
                    <Setter Property="Background" Value="White"/>
                    <Style.Triggers>
                        <Trigger Property="AlternationIndex" Value="1">
                            <Setter Property="Background" Value="LightGray"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Salmon"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
                    <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
                    <Setter Property="TextBlock.TextAlignment" Value="Center"></Setter>
                    <Setter Property="TextBlock.VerticalAlignment" Value="Center"></Setter>
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="BorderThickness" Value="0"></Setter>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.Resources>
                <data:VolunteerChildAssignmentDataGridModel x:Key="VolunteerGeneralDataGrid" />
            </DataGrid.Resources>

            <DataGrid.DataContext>
                <Binding Source="{StaticResource VolunteerGeneralDataGrid}"/>
            </DataGrid.DataContext>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Identifier" Binding="{Binding Path=Identifier}" Width="*" />
                <DataGridTextColumn Header="Conditions" Binding="{Binding Path=Condition}" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="ToolTipService.ToolTip" Value="{Binding ConditionDescription}" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Student Needs" Binding="{Binding Path=StudentNeeds}" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="ToolTipService.ToolTip" Value="{Binding StudentNeedsDescription}" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Desired Outcome" Binding="{Binding Path=DesiredOutcome}" Width="*"/>
            </DataGrid.Columns>

            <!--<DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
            </DataGrid.CellStyle>-->
        </DataGrid>
    </Grid>
</Page>
